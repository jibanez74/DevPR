[{"/app/src/index.js":"1","/app/src/store.js":"2","/app/src/aws-exports.js":"3","/app/src/App.js":"4","/app/src/reducers/profileReducer.js":"5","/app/src/reducers/userReducers.js":"6","/app/src/components/auth/PrivateRoute.js":"7","/app/src/actions/userActions.js":"8","/app/src/components/auth/Register.js":"9","/app/src/components/auth/ConfirmScreen.js":"10","/app/src/components/auth/ResetPassword.js":"11","/app/src/components/landing/Landing.js":"12","/app/src/components/profile/EditProfile.js":"13","/app/src/components/auth/Login.js":"14","/app/src/components/dashboard/Dashboard.js":"15","/app/src/components/layouts/AppBar.js":"16","/app/src/constants/userConstants.js":"17","/app/src/constants/profileConstants.js":"18","/app/src/components/layouts/Message.js":"19","/app/src/components/layouts/PageHeader.js":"20","/app/src/components/layouts/Loader.js":"21","/app/src/components/landing/LandingInfo.js":"22","/app/src/components/landing/LandingCarousel.js":"23","/app/src/actions/profileActions.js":"24","/app/src/components/landing/LandingIcons.js":"25","/app/src/utils/options.js":"26","/app/src/components/auth/SocialProviders.jsx":"27","/app/src/constants/apiConstants.js":"28"},{"size":454,"mtime":1612198322000,"results":"29","hashOfConfig":"30"},{"size":650,"mtime":1614099642107,"results":"31","hashOfConfig":"30"},{"size":469,"mtime":1614206434378,"results":"32","hashOfConfig":"30"},{"size":1423,"mtime":1613924586406,"results":"33","hashOfConfig":"30"},{"size":1123,"mtime":1614094290658,"results":"34","hashOfConfig":"30"},{"size":591,"mtime":1612921773741,"results":"35","hashOfConfig":"30"},{"size":588,"mtime":1612989779824,"results":"36","hashOfConfig":"30"},{"size":1202,"mtime":1614616748046,"results":"37","hashOfConfig":"30"},{"size":5949,"mtime":1612918163411,"results":"38","hashOfConfig":"30"},{"size":1938,"mtime":1612460889484,"results":"39","hashOfConfig":"30"},{"size":3277,"mtime":1612918632237,"results":"40","hashOfConfig":"30"},{"size":306,"mtime":1610493786000,"results":"41","hashOfConfig":"30"},{"size":6991,"mtime":1614813609618,"results":"42","hashOfConfig":"30"},{"size":4620,"mtime":1612920468576,"results":"43","hashOfConfig":"30"},{"size":1150,"mtime":1614618070134,"results":"44","hashOfConfig":"30"},{"size":1797,"mtime":1612988657651,"results":"45","hashOfConfig":"30"},{"size":208,"mtime":1612989861575,"results":"46","hashOfConfig":"30"},{"size":362,"mtime":1614093896289,"results":"47","hashOfConfig":"30"},{"size":213,"mtime":1612368406000,"results":"48","hashOfConfig":"30"},{"size":371,"mtime":1610491858000,"results":"49","hashOfConfig":"30"},{"size":358,"mtime":1612368462000,"results":"50","hashOfConfig":"30"},{"size":1714,"mtime":1612894974927,"results":"51","hashOfConfig":"30"},{"size":1650,"mtime":1610491858000,"results":"52","hashOfConfig":"30"},{"size":1429,"mtime":1614814089629,"results":"53","hashOfConfig":"30"},{"size":1099,"mtime":1610491858000,"results":"54","hashOfConfig":"30"},{"size":4066,"mtime":1613925555297,"results":"55","hashOfConfig":"30"},{"size":514,"mtime":1610978359512,"results":"56","hashOfConfig":"30"},{"size":137,"mtime":1614813945958,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1q4cy2o",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/app/src/index.js",[],["116","117"],"/app/src/store.js",[],"/app/src/aws-exports.js",[],"/app/src/App.js",[],"/app/src/reducers/profileReducer.js",[],"/app/src/reducers/userReducers.js",[],"/app/src/components/auth/PrivateRoute.js",[],"/app/src/actions/userActions.js",[],"/app/src/components/auth/Register.js",[],"/app/src/components/auth/ConfirmScreen.js",[],"/app/src/components/auth/ResetPassword.js",[],"/app/src/components/landing/Landing.js",[],"/app/src/components/profile/EditProfile.js",["118"],"import { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\n// import Loader from '../layouts/Loader';\r\n// import Message from '../layouts/Message';\r\nimport PageHeader from '../layouts/PageHeader';\r\nimport { locationOptions, statusOptions } from '../../utils/options';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { editProfile } from '../../actions/profileActions';\r\n\r\nfunction EditProfile({ history }) {\r\n  const [status, setStatus] = useState('');\r\n  const [skills, setSkills] = useState('');\r\n  const [company, setCompany] = useState('');\r\n  const [website, setWebsite] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [bio, setBio] = useState('');\r\n  const [githubUsername, setGithubUsername] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [facebook, setFacebook] = useState('');\r\n  const [twitter, setTwitter] = useState('');\r\n  const [instagram, setInstagram] = useState('');\r\n  const [linkedin, setLinkedin] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const editProfile = useSelector(state => state.editProfile);\r\n  const { success } = editProfile;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push('/dashboard');\r\n    }\r\n  }, [success, history]);\r\n\r\n  const saveHandler = e => {\r\n    dispatch(\r\n      editProfile({\r\n        status,\r\n        skills,\r\n        company,\r\n        website,\r\n        location,\r\n        bio,\r\n        githubUsername,\r\n        phone,\r\n        facebook,\r\n        twitter,\r\n        instagram,\r\n        linkedin,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <PageHeader\r\n        title=\"Edit Profile\"\r\n        msg=\"All Fields marked with a * are required\"\r\n      />\r\n\r\n      <section className=\"edit-profile-section\">\r\n        <Container>\r\n          <Row>\r\n            <Col md={4}></Col>\r\n            <Col md={8}>\r\n              <Form onSubmit={saveHandler}>\r\n                <Form.Group controlId=\"status\">\r\n                  <Form.Label>* Status</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    required\r\n                    value={status}\r\n                    onChange={e => setStatus(e.target.value)}\r\n                  >\r\n                    {statusOptions.map(x => (\r\n                      <option key={x.label} value={x.value} label={x.label}>\r\n                        {x.value}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"skills\">\r\n                  <Form.Label>* Skills</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    required\r\n                    value={skills}\r\n                    onChange={e => setSkills(e.target.value)}\r\n                    rows=\"5\"\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"company\">\r\n                  <Form.Label>Company</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    maxLength=\"80\"\r\n                    value={company}\r\n                    onChange={e => setCompany(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"website\">\r\n                  <Form.Label>Website or Blog</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={website}\r\n                    onChange={e => setWebsite(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"location\">\r\n                  <Form.Label>Location</Form.Label>\r\n                  <Form.Control\r\n                    as=\"select\"\r\n                    value={location}\r\n                    onChange={e => setLocation(e.target.value)}\r\n                  >\r\n                    {locationOptions.map(x => (\r\n                      <option key={x.label} value={x.value} label={x.label}>\r\n                        {x.value}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"bio\">\r\n                  <Form.Label>Bio</Form.Label>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    minLength=\"8\"\r\n                    maxLength=\"500\"\r\n                    value={bio}\r\n                    onChange={e => setBio(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"githubUsername\">\r\n                  <Form.Label>Github Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    maxLength=\"100\"\r\n                    onChange={e => setGithubUsername(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"phone\">\r\n                  <Form.Label>Phone</Form.Label>\r\n                  <Form.Control\r\n                    type=\"tel\"\r\n                    value={phone}\r\n                    onChange={e => setPhone(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"facebook\">\r\n                  <Form.Label>Facebook</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={facebook}\r\n                    onChange={e => setFacebook(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"twitter\">\r\n                  <Form.Label>Twitter</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={twitter}\r\n                    onChange={e => setTwitter(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"instagram\">\r\n                  <Form.Label>Instagram</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={instagram}\r\n                    onChange={e => setInstagram(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"linkedin\">\r\n                  <Form.Label>Linkedin</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={linkedin}\r\n                    onChange={e => setLinkedin(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className=\"mt-4\" type=\"submit\" block variant=\"info\">\r\n                  Save Profile\r\n                </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EditProfile;\r\n","/app/src/components/auth/Login.js",[],"/app/src/components/dashboard/Dashboard.js",[],"/app/src/components/layouts/AppBar.js",[],"/app/src/constants/userConstants.js",[],"/app/src/constants/profileConstants.js",[],"/app/src/components/layouts/Message.js",[],"/app/src/components/layouts/PageHeader.js",[],"/app/src/components/layouts/Loader.js",[],"/app/src/components/landing/LandingInfo.js",[],"/app/src/components/landing/LandingCarousel.js",[],"/app/src/actions/profileActions.js",[],"/app/src/components/landing/LandingIcons.js",[],"/app/src/utils/options.js",[],"/app/src/components/auth/SocialProviders.jsx",[],"/app/src/constants/apiConstants.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":21},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'editProfile' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]